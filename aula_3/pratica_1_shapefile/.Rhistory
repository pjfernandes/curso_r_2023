library(sp)
library(rgdal)
niteroi<-readOGR("https://github.com/pjfernandes/pjfernandes.github.io/blob/master/Bairros_Niteroi.shp?raw=true","Bairros_Niteroi")
niteroi<-readOGR("/home/uff/Área de Trabalho/arquivos/curso_r/aula/Bairros_Niteroi.shp","Bairros_Niteroi")
library(raster)
shapefile("Bairros_Niteroi.shp")
niteroi<-readOGR("/home/uff/Área de Trabalho/arquivos/curso_r/aula/Bairros_Niteroi.shp", "Bairros_Niteroi")
library(sp)
library(rgdal)
niteroi<-readOGR("/home/uff/Área de Trabalho/arquivos/curso_r/aula/pratica_1_shapefile/Bairros_Niteroi.shp", "Bairros_Niteroi")
niteroi<-readOGR("/home/uff/Área de Trabalho/arquivos/curso_r/aula_4/pratica_1_shapefile/Bairros_Niteroi.shp", "Bairros_Niteroi")
plot(niteroi)
summary(niteroi)
#Vamos fazer o subset do bairro Boa Viagem
bv<-niteroi[niteroi$NOME=="BOA VIAGEM",]
plot(bv)
crs(bv) #FUNÇÃO DO PACOTE RASTER (PROJEÇÃO)
#proj4string(bv)<-CRS() #APAGANDO A PROJEÇÃO
proj4string(bv)<-CRS("+proj=utm +zone=23 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0") #DEFININDO A PROJEÇÃO
crs(bv)
bv_longlat<-spTransform(bv,CRS("+proj=longlat")) #REPROJENTADO PARA LONGLAT
plot(bv_longlat)
llgridlines(bv_longlat,lty=3) #PLOTAR O GRID. Lty é o tipo
#Lendo tabela com coordenadas e plotando pontos
df <- read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_2/samples.csv", sep=";", h=T)
head(df)
coordinates(df) <- c("longitude", "latitude")
plot(df)
summary(df)
df
crs(df)
pontos<-read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_4/pratica_2_leitura_de_pontos_dgps/pontos.txt", sep=",", h=T)
head(df)
pontos<-read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_4/pratica_2_leitura_de_pontos_dgps/pontos.txt", sep=",", h=T)
head(pontos)
coordinates(pontos)<-c("x", "y")
coordinates(pontos)<-c("x", "y")
pontos<-read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_4/pratica_2_leitura_de_pontos_dgps/pontos.txt", sep=",", h=T)
head(pontos)
coordinates(pontos)<-c("x", "y")
pontos<-read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_4/pratica_2_leitura_de_pontos_dgps/pontos.txt", sep=",", h=T)
head(pontos)
coordinates(pontos)<-c("x", "y")
pontos<-read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_4/pratica_2_leitura_de_pontos_dgps/pontos.txt", sep=",", h=T)
head(pontos)
coordinates(pontos)<-c("x", "y")
plot(pontos)
plot(pontos)
mde<-rasterFromXYZ(pontos)
mde<-rasterFromXYZ(pontos[,c("x", "y", "z"])
coordinates(pontos)<-c("x", "y")
pontos[,c("x", "y", "z"]
mde<-rasterFromXYZ(pontos[,c("x", "y", "z")])
pontos[,c("x", "y", "z")]
mde<-rasterFromXYZ(pontos[,c(5, 6, 7)])
pontos[,c(5, 6, 7)]
pontos[,5]
r <- raster(nrow=5, ncol=5, xmn=0, xmx=10, ymn=0, ymx=10, crs="")
set.seed(1)
values(r) <- sample(1:25)
r[r < 15] <- NA
xyz <- rasterToPoints(r)
xyz
pontos<-read.csv("https://raw.githubusercontent.com/pjfernandes/curso_r/master/aula_4/pratica_2_leitura_de_pontos_dgps/pontos.txt", sep=",", h=T)
head(pontos)
pontos <- pontos[,c("x", "y", "z")]
rasterFromXYZ(pontos)
pontos <- pontos[, c("x", "y", "z")]
coordinates(pontos) <-c("x", "y")
r<-raster(ext=extent(pontos), resolution=1)
mde<-rasterize(pontos, r, pontos$z, fun=mean)
plot(mde)
writeRaster(mde, "mde.tif")
writeRaster(mde, "mde.tif", overwrite=T)
getwd()
